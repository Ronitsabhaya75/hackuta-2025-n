name: PR Status Comment

on:
  pull_request_target:
    types: [opened, reopened]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  create-status:
    runs-on: ubuntu-latest
    steps:
      - name: Create initial status comment
        id: status-comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const statusComment = `## üìä Workflow Status Report

| Workflow | Status | Duration | Details |
|----------|--------|----------|---------|
| Gatekeeper | ‚è≥ Running | - | [View](https://github.com/${context.repo.owner}/${context.repo.repo}/actions) |
| Label PRs | ‚è≥ Running | - | [View](https://github.com/${context.repo.owner}/${context.repo.repo}/actions) |
| Lint Check | ‚è≥ Pending | - | [View](https://github.com/${context.repo.owner}/${context.repo.repo}/actions) |
| Build Check | ‚è≥ Pending | - | [View](https://github.com/${context.repo.owner}/${context.repo.repo}/actions) |
| Security Check | ‚è≥ Pending | - | [View](https://github.com/${context.repo.owner}/${context.repo.repo}/actions) |
| Vercel Deployment | ‚è≥ Pending | - | [View](https://github.com/${context.repo.owner}/${context.repo.repo}/actions) |

*This comment will be updated automatically as workflows complete.*

**Legend:** ‚è≥ Running/Pending ‚Ä¢ ‚úÖ Passed ‚Ä¢ ‚ùå Failed ‚Ä¢ ‚è∏Ô∏è Skipped
`;

            const comment = await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: statusComment
            });
            
            console.log('Created status comment with ID:', comment.data.id);
            return comment.data.id;
