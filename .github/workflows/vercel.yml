name: Vercel Deployment

on:
  workflow_run:
    workflows: ["Label PRs"]
    types: [completed]
  push:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  deploy-preview:
    if: github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    runs-on: ubuntu-latest
    environment: preview
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Vercel CLI
        run: pnpm add -g vercel@latest

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build application
        run: pnpm build
        env:
          NEXT_PUBLIC_SUPABASE_URL: "https://placeholder.supabase.co"
          NEXT_PUBLIC_SUPABASE_ANON_KEY: "placeholder-key"

      - name: Deploy to Vercel (Preview)
        id: deploy-preview
        if: env.VERCEL_TOKEN != ''
        run: |
          DEPLOYMENT_URL=$(vercel --token=${{ secrets.VERCEL_TOKEN }} --yes)
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Comment PR with preview URL
        if: success() && steps.deploy-preview.outputs.deployment_url != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **Vercel Preview Deployment**\n\n‚úÖ Preview deployment successful!\n\nüîó **Preview URL:** ${{ steps.deploy-preview.outputs.deployment_url }}\n\nThis preview will be updated automatically when you push new commits to this PR.`
            })

      - name: Comment when Vercel not configured
        if: env.VERCEL_TOKEN == ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚ÑπÔ∏è **Vercel Deployment Skipped**\n\nVercel deployment was skipped because \`VERCEL_TOKEN\` is not configured.\n\nTo enable Vercel deployments, add the required secrets to your repository.`
            })

  deploy-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Vercel CLI
        run: pnpm add -g vercel@latest

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build application
        run: pnpm build
        env:
          NEXT_PUBLIC_SUPABASE_URL: "https://placeholder.supabase.co"
          NEXT_PUBLIC_SUPABASE_ANON_KEY: "placeholder-key"

      - name: Deploy to Vercel (Production)
        if: env.VERCEL_TOKEN != ''
        run: |
          vercel --token=${{ secrets.VERCEL_TOKEN }} --prod --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
